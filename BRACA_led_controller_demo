#include <math.h>

// === LED Pins ===
const int RED_LED = 9;    // Too high pressure
const int ORANGE_LED = 7; // Too low pressure
const int GREEN_LED = 8;  // Within target range

int sensorpin = A0;
int sensor;
// === Pressure Control Parameters ===
float targetPressure = 30.0;         // Desired pressure in mmHg
float pressureTolerance = 5.0;       // Acceptable error margin (mmHg)

// === Calibration constants for voltage-to-pressure conversion ===
const float A = 0.238;
const float B = 1.19;

void setup() {
  Serial.begin(9600);

  // Set LED pins as output
  pinMode(RED_LED, OUTPUT);
  pinMode(ORANGE_LED, OUTPUT);
  pinMode(GREEN_LED, OUTPUT);

  // Turn off all LEDs initially
  digitalWrite(RED_LED, LOW);
  digitalWrite(ORANGE_LED, LOW);
  digitalWrite(GREEN_LED, LOW);
}

void loop() {
  // Read analog sensor and convert to voltage
  sensor = analogRead(sensorpin);
  float voltage = sensor * (5.0 / 1023.0);

  // Convert voltage to pressure using exponential model
  float pressure = A * exp(B * voltage);

  // Debug info
  Serial.print("Sensor: "); Serial.print(sensor);
  Serial.print(" | Voltage: "); Serial.print(voltage, 3);
  Serial.print(" V | Pressure: "); Serial.print(pressure, 2);
  Serial.println(" mmHg");

  // Calculate error
  float error = targetPressure - pressure;

  // === LED Control Logic ===
  if (abs(error) < pressureTolerance) {
    // Within acceptable range — GREEN
    setLEDState(GREEN_LED);
  } else if (error > 0) {
    // Pressure too low — ORANGE
    setLEDState(ORANGE_LED);
  } else {
    // Pressure too high — RED
    setLEDState(RED_LED);
  }

  delay(200); // Delay between readings
}

// Helper to turn on only one LED at a time
void setLEDState(int ledPin) {
  digitalWrite(RED_LED, ledPin == RED_LED ? HIGH : LOW);
  digitalWrite(ORANGE_LED, ledPin == ORANGE_LED ? HIGH : LOW);
  digitalWrite(GREEN_LED, ledPin == GREEN_LED ? HIGH : LOW);
}
